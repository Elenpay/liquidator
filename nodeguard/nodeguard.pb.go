// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: nodeguard.proto

package nodeguard

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLiquidityRulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodePubkey string `protobuf:"bytes,1,opt,name=node_pubkey,json=nodePubkey,proto3" json:"node_pubkey,omitempty"`
}

func (x *GetLiquidityRulesRequest) Reset() {
	*x = GetLiquidityRulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeguard_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiquidityRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiquidityRulesRequest) ProtoMessage() {}

func (x *GetLiquidityRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodeguard_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiquidityRulesRequest.ProtoReflect.Descriptor instead.
func (*GetLiquidityRulesRequest) Descriptor() ([]byte, []int) {
	return file_nodeguard_proto_rawDescGZIP(), []int{0}
}

func (x *GetLiquidityRulesRequest) GetNodePubkey() string {
	if x != nil {
		return x.NodePubkey
	}
	return ""
}

type GetLiquidityRulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LiquidityRules []*LiquidityRule `protobuf:"bytes,1,rep,name=liquidity_rules,json=liquidityRules,proto3" json:"liquidity_rules,omitempty"`
}

func (x *GetLiquidityRulesResponse) Reset() {
	*x = GetLiquidityRulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeguard_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLiquidityRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLiquidityRulesResponse) ProtoMessage() {}

func (x *GetLiquidityRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodeguard_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLiquidityRulesResponse.ProtoReflect.Descriptor instead.
func (*GetLiquidityRulesResponse) Descriptor() ([]byte, []int) {
	return file_nodeguard_proto_rawDescGZIP(), []int{1}
}

func (x *GetLiquidityRulesResponse) GetLiquidityRules() []*LiquidityRule {
	if x != nil {
		return x.LiquidityRules
	}
	return nil
}

type LiquidityRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId            uint64  `protobuf:"varint,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	NodePubkey           string  `protobuf:"bytes,2,opt,name=node_pubkey,json=nodePubkey,proto3" json:"node_pubkey,omitempty"`
	WalletId             int32   `protobuf:"varint,3,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	MinimumLocalBalance  float32 `protobuf:"fixed32,4,opt,name=minimum_local_balance,json=minimumLocalBalance,proto3" json:"minimum_local_balance,omitempty"`
	MinimumRemoteBalance float32 `protobuf:"fixed32,5,opt,name=minimum_remote_balance,json=minimumRemoteBalance,proto3" json:"minimum_remote_balance,omitempty"`
	RebalanceTarget      float32 `protobuf:"fixed32,6,opt,name=rebalance_target,json=rebalanceTarget,proto3" json:"rebalance_target,omitempty"`
}

func (x *LiquidityRule) Reset() {
	*x = LiquidityRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeguard_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LiquidityRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LiquidityRule) ProtoMessage() {}

func (x *LiquidityRule) ProtoReflect() protoreflect.Message {
	mi := &file_nodeguard_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LiquidityRule.ProtoReflect.Descriptor instead.
func (*LiquidityRule) Descriptor() ([]byte, []int) {
	return file_nodeguard_proto_rawDescGZIP(), []int{2}
}

func (x *LiquidityRule) GetChannelId() uint64 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *LiquidityRule) GetNodePubkey() string {
	if x != nil {
		return x.NodePubkey
	}
	return ""
}

func (x *LiquidityRule) GetWalletId() int32 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *LiquidityRule) GetMinimumLocalBalance() float32 {
	if x != nil {
		return x.MinimumLocalBalance
	}
	return 0
}

func (x *LiquidityRule) GetMinimumRemoteBalance() float32 {
	if x != nil {
		return x.MinimumRemoteBalance
	}
	return 0
}

func (x *LiquidityRule) GetRebalanceTarget() float32 {
	if x != nil {
		return x.RebalanceTarget
	}
	return 0
}

type GetNewWalletAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId int32 `protobuf:"varint,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
}

func (x *GetNewWalletAddressRequest) Reset() {
	*x = GetNewWalletAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeguard_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewWalletAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewWalletAddressRequest) ProtoMessage() {}

func (x *GetNewWalletAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodeguard_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewWalletAddressRequest.ProtoReflect.Descriptor instead.
func (*GetNewWalletAddressRequest) Descriptor() ([]byte, []int) {
	return file_nodeguard_proto_rawDescGZIP(), []int{3}
}

func (x *GetNewWalletAddressRequest) GetWalletId() int32 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

type GetNewWalletAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GetNewWalletAddressResponse) Reset() {
	*x = GetNewWalletAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeguard_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewWalletAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewWalletAddressResponse) ProtoMessage() {}

func (x *GetNewWalletAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodeguard_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewWalletAddressResponse.ProtoReflect.Descriptor instead.
func (*GetNewWalletAddressResponse) Descriptor() ([]byte, []int) {
	return file_nodeguard_proto_rawDescGZIP(), []int{4}
}

func (x *GetNewWalletAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type RequestWithdrawalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WalletId int32  `protobuf:"varint,1,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id,omitempty"`
	Address  string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// Amount in satoshis
	Amount      int64  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *RequestWithdrawalRequest) Reset() {
	*x = RequestWithdrawalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeguard_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestWithdrawalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestWithdrawalRequest) ProtoMessage() {}

func (x *RequestWithdrawalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodeguard_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestWithdrawalRequest.ProtoReflect.Descriptor instead.
func (*RequestWithdrawalRequest) Descriptor() ([]byte, []int) {
	return file_nodeguard_proto_rawDescGZIP(), []int{5}
}

func (x *RequestWithdrawalRequest) GetWalletId() int32 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *RequestWithdrawalRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RequestWithdrawalRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *RequestWithdrawalRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RequestWithdrawalResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// optionalTransaction ID of the withdrawal
	Txid        string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	IsHotWallet bool   `protobuf:"varint,2,opt,name=is_hot_wallet,json=isHotWallet,proto3" json:"is_hot_wallet,omitempty"`
}

func (x *RequestWithdrawalResponse) Reset() {
	*x = RequestWithdrawalResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeguard_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestWithdrawalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestWithdrawalResponse) ProtoMessage() {}

func (x *RequestWithdrawalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodeguard_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestWithdrawalResponse.ProtoReflect.Descriptor instead.
func (*RequestWithdrawalResponse) Descriptor() ([]byte, []int) {
	return file_nodeguard_proto_rawDescGZIP(), []int{6}
}

func (x *RequestWithdrawalResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *RequestWithdrawalResponse) GetIsHotWallet() bool {
	if x != nil {
		return x.IsHotWallet
	}
	return false
}

var File_nodeguard_proto protoreflect.FileDescriptor

var file_nodeguard_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x22, 0x3b, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65,
	0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e,
	0x6f, 0x64, 0x65, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x22, 0x5e, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64,
	0x69, 0x74, 0x79, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x4c, 0x69, 0x71, 0x75,
	0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x0e, 0x6c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x81, 0x02, 0x0a, 0x0d, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x15, 0x6d, 0x69, 0x6e, 0x69,
	0x6d, 0x75, 0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x16,
	0x6d, 0x69, 0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14, 0x6d, 0x69,
	0x6e, 0x69, 0x6d, 0x75, 0x6d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x72, 0x65,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x39, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x77, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x8b, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x53, 0x0a, 0x19, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64,
	0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x74, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x32, 0xb8, 0x02, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x47, 0x75, 0x61,
	0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x23,
	0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e,
	0x47, 0x65, 0x74, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x75, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x77, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x25, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x77, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5e, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72,
	0x61, 0x77, 0x61, 0x6c, 0x12, 0x23, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6e, 0x6f, 0x64, 0x65,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x57, 0x69, 0x74,
	0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nodeguard_proto_rawDescOnce sync.Once
	file_nodeguard_proto_rawDescData = file_nodeguard_proto_rawDesc
)

func file_nodeguard_proto_rawDescGZIP() []byte {
	file_nodeguard_proto_rawDescOnce.Do(func() {
		file_nodeguard_proto_rawDescData = protoimpl.X.CompressGZIP(file_nodeguard_proto_rawDescData)
	})
	return file_nodeguard_proto_rawDescData
}

var file_nodeguard_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_nodeguard_proto_goTypes = []interface{}{
	(*GetLiquidityRulesRequest)(nil),    // 0: nodeguard.GetLiquidityRulesRequest
	(*GetLiquidityRulesResponse)(nil),   // 1: nodeguard.GetLiquidityRulesResponse
	(*LiquidityRule)(nil),               // 2: nodeguard.LiquidityRule
	(*GetNewWalletAddressRequest)(nil),  // 3: nodeguard.GetNewWalletAddressRequest
	(*GetNewWalletAddressResponse)(nil), // 4: nodeguard.GetNewWalletAddressResponse
	(*RequestWithdrawalRequest)(nil),    // 5: nodeguard.RequestWithdrawalRequest
	(*RequestWithdrawalResponse)(nil),   // 6: nodeguard.RequestWithdrawalResponse
}
var file_nodeguard_proto_depIdxs = []int32{
	2, // 0: nodeguard.GetLiquidityRulesResponse.liquidity_rules:type_name -> nodeguard.LiquidityRule
	0, // 1: nodeguard.NodeGuardService.GetLiquidityRules:input_type -> nodeguard.GetLiquidityRulesRequest
	3, // 2: nodeguard.NodeGuardService.GetNewWalletAddress:input_type -> nodeguard.GetNewWalletAddressRequest
	5, // 3: nodeguard.NodeGuardService.RequestWithdrawal:input_type -> nodeguard.RequestWithdrawalRequest
	1, // 4: nodeguard.NodeGuardService.GetLiquidityRules:output_type -> nodeguard.GetLiquidityRulesResponse
	4, // 5: nodeguard.NodeGuardService.GetNewWalletAddress:output_type -> nodeguard.GetNewWalletAddressResponse
	6, // 6: nodeguard.NodeGuardService.RequestWithdrawal:output_type -> nodeguard.RequestWithdrawalResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_nodeguard_proto_init() }
func file_nodeguard_proto_init() {
	if File_nodeguard_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nodeguard_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiquidityRulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeguard_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLiquidityRulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeguard_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LiquidityRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeguard_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewWalletAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeguard_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewWalletAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeguard_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestWithdrawalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeguard_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestWithdrawalResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nodeguard_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nodeguard_proto_goTypes,
		DependencyIndexes: file_nodeguard_proto_depIdxs,
		MessageInfos:      file_nodeguard_proto_msgTypes,
	}.Build()
	File_nodeguard_proto = out.File
	file_nodeguard_proto_rawDesc = nil
	file_nodeguard_proto_goTypes = nil
	file_nodeguard_proto_depIdxs = nil
}
