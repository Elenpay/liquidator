stages:
  - testing
  - build-staging
  - build-production
image: docker:stable

services:
  - docker:dind

testing:
  stage: testing
  image: golang:1.19.3
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop" || $CI_COMMIT_REF_NAME == "main" ||  $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - go test -v ./...

build-staging:
  stage: build-staging
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop" &&  $CI_PIPELINE_SOURCE != "merge_request_event"
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME -f Dockerfile .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

build-production:
  stage: build-production
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME -f Dockerfile .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  only:
    - tags